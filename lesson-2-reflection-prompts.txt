What happens when you initialize a repository? Why do you need to do it?

	The initialize cause the .git file to be created so that the metadata from
	individual files can be handled and managed.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area show what files are going to be committed to the repository.
	The benefit of this would be that it allows for selective committing to 
	repository and time to review what is going to be committed.

How can you use the staging area to make sure you have one commit per logical
change?

	You can compare the last commit and the staging area, using git diff --staged.
	If there is a large change between the two then there may need to be a smaller
	chunk that is changed per version.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches would allow for the user to make changes and still have a working
	master file. Also, it would allow for multiple people to work on diverging
	branches.

How do the diagrams help you visualize the branch structure?

	They allows for the user to understand where they are in the relation to 
	the master branch and any other branches that are being modified.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
